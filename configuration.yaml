homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 52.5155
  longitude: 13.4062
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 32
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Berlin

# Show links to resources in log and frontend
introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

logger:
  default: debug
  logs:
    homeassistant.components.light: warning

#logger:
#  default: warning
#  logs:
#    homeassistant.components.device_tracker: debug

ifttt:
  key: !secret iftttapikey

knx:
  host: 192.168.1.38

sensor:
  - platform: jaalee_temperature

#  - platform: eddystone_temperature
#    beacons:
#      jaalee:
#        namespace: "EBEFD08370A247C89837"
#        instance: "E7B5634DF524"

http:
  # Uncomment this to add a password (recommended!)
  # api_password: PASSWORD
  # Uncomment this if you are using SSL or running in Docker etc
  # base_url: example.duckdns.org:8123

# Checks for available updates
updater:

#mqtt:

# Example configuration.yaml entry
device_tracker:
  - platform: nmap_tracker
    hosts:
      - 192.168.1.50
      - 192.168.1.76
    scan_options: " --privileged -sS -O -p 4000 -Pn "
  - platform: ping
    hosts:
      hostone: 192.168.1.50
    interval_seconds: 10
    consider_home: 180
#  - platform: icloud
#    username: USERNAME
#    password: PASSWORD

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time.
history:

# View all events in a logbook
logbook:

# Track the sun
sun:

# Weather Prediction
#sensor:
#  platform: yr

enocean:
  device: /dev/ttyUSB0

binary_sensor:
  - platform: enocean
    name: "button sensor"
    id: [0xFE,0xFB,0xFE,0x61]
  - platform: knx
    name: "knxBinarySensor"
    address: 0/0/0
binary_sensor 2:
  platform: jaalee
  scan_interval: 1
  # - platform: enocean
  #   name: "no-button sensor"
  #   id: [0xE2,0x15,0x00,0x00,0x1E,0xE7]

# sensor:
#   - name: Television
#     platform: enocean
#     id: [0xFE,0xFB,0xFE,0x61]

# Text to speech
tts:
  platform: google

# Example configuration.yaml entry
#arduino:
#  port: /dev/ttyACM0

# Example configuration.yaml entry
#switch:
#  platform: arduino
#  pins:
#    13:
#      name: Light Desk
#      initial: false
#      negate: false


light:
  - platform: dali
  - platform: osramlightify
    host: 192.168.1.120
  - platform: lifx_legacy
    server: 192.168.1.12

# Example configuration.yaml entry
# device_tracker:
#  - platform: bluetooth_le_tracker
#    discovery: enabled
#    track_new_devices: True
#    consider_home: 180
#    interval_seconds: 5

notify:
  - name: slack
    username: HomeAssistant
    platform: slack
    api_key: !secret slackapikey
    default_channel: '@riccardo'
    icon: ":house_with_garden:"

switch:
  - platform: gog
  - platform: knx
    name: KNX Switch
    address: 0/0/0
  # - platform: dali
  # - platform: enocean
  #   id: [0xFE,0xFB,0xFE,0x61]

api: ''
media_player:
- hosts:
  - 192.168.1.71
  - 192.168.1.73
  platform: sonos
websocket_api: ''

automation:
- alias: '10.00 Daily Alignment Gong'
  trigger:
    platform: time
    after: '10:00:00'
  condition:
  - condition: time
    weekday:
      - tue
      - wed
      - thu
      - fri
  action:
    - service: switch.turn_on
      entity_id: switch.gong

- alias: '9.00 Monday Alignment Gong'
  trigger:
    platform: time
    after: '9:00:00'
  condition:
  - condition: time
    weekday:
      - mon
  action:
    - service: switch.turn_on
      entity_id: switch.gong

- alias: 'Slack Notification'
  trigger:
    platform: state
    entity_id: light.dali
    to: 'on'
  action:
    - service: notify.slack
      data:
        message: "CIAO from HOME ASSISTANT :smile:, Dali light is ON"

- alias: 'Dali lights automation'
  trigger:
    platform: time
    after: '10:00:00'
  action:
    - service: light.turn_on
      entity_id: light.dali

- alias: 'Dali on if iBeacon'
  trigger:
    platform: state
    entity_id: binary_sensor.ibeaconbinary
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      entity_id: light.dali

- alias: 'Dali off if iBeacon'
  trigger:
    platform: state
    entity_id: binary_sensor.ibeaconbinary
    from: 'on'
    to: 'off'
  action:
    - service: light.turn_on
      entity_id: light.dali

- alias: 'Dali on if home'
  trigger:
    platform: state
    entity_id: device_tracker.hostone
    from: 'not_home'
    to: 'home'
  action:
    - service: light.turn_on
      entity_id: light.dali

- alias: 'send telegram via IFTTT to Riccardo if Lars is at the office'
  trigger:
    platform: state
    entity_id: device_tracker.28e14c992191
    from: 'not_home'
    to: 'home'
  action:
    - service: ifttt.trigger
      data: {"event":"button_pressed"}

- alias: enOcean to Dali
  trigger:
    platform: event
    event_type: button_pressed
    event_data:
      id: [0xFE,0xFB,0xFE,0x61]
      pushed: 0
      which: 0
  action:
    - service: light.turn_on
      entity_id: light.dali

- alias: enOcean to Sonos
  trigger:
    platform: event
    event_type: button_pressed
    event_data:
      id: [0xFE,0xFB,0xFE,0x61]
      pushed: 0
      which: 1
  action:
    - service: media_player.media_play_pause
      entity_id: media_player.salotto

group: !include groups.yaml


